if expr {block}
else if expr {block}
else if expr {block}
else if expr {block}
else if expr {block}

else {

}


import cga2d



import ndeuclid
import * from ndeuclid



export fn a() {

}


fn a() {

}
export a

export x = 3
export x, y, z
export (x, y, z)

cga2d.point()


import * from thing
import a, b, c from thing.abc
import thing.abc
import thing.abc as blah
import thing, thing2.abc as def, thing3 from other



import * from thing



import a,b,c,d,e,f
import a,b,c,d,e,f from thing



import * from util.layers
import util.layers as layers
import layers from util
import util


import util.layers



import (path.to.thing as name, thing as name, thing) [from path.to.source]


import "path"
import "path/to/source" as whatever
import a,b,c from "path/to/source"
import (a,b,c,) from "path/to/source"
import * from "path/to/source"




name = path.to.source.path.to.thing


use * from self.axes
use R, U, F from self.axes
use (R, U, F) from self.axes


if
    condition
{
    blah
}
else
if
condition2
{
    blah2
}
else
{
    blah3
}


import
a,b,c
from
