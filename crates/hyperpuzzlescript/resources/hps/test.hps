// todo

print(1/3)

print("$(1/3) + $(1/2)")

import ft_cubic/common
import * from euclid
import * from ...

export f = fn(a, b) {
    return a + b
}


x = if a < 0 { 3 } else { 4 }

+ - * / % **

. // object & map access

^ & << >> // geometric algebra

** && || // better error message

rot(#{ fix=U, from=R, to=F })

: // type annotation
-> // return type annotation

_ // throwaway

"string with $(interpolation)"

floor(a/b)

and
or

==
!=
>
<
>=
<=

() // grouping
[] // array
#{} // map
{} // block

inherit_directions

fn(a, b) -> Any { a + b }
