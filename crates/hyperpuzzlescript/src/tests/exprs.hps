assert_eq(1, 1)

// approx equality
assert_eq(1, 1 + 0.0000005)
assert_neq(1, 1 + 0.000005)
assert(1 == 1 + 0.0000005)
assert(1 != 1 + 0.000005)
assert(vec(1) == vec(1 + 0.0000005))

v = vec(1)
assert_eq(v.x, 1)
assert_eq(v.y, 0)
assert_eq(v[0], 1)
assert_eq(v[9], 0)

v = vec(1, 2, 3)
assert_eq([v.x, v.y, v.z], [1, 2, 3])

assert_eq(vec(1, 2), vec(1, 2, 0))
assert_neq(vec(1, 2), vec(1, 3))
assert_neq(vec(1, 2), vec(4, 3))
assert_eq(vec(1, 2), vec(*[1, 2]))
assert_eq(vec(1, 2), vec(x=1, y=2))
assert_eq(vec(), vec(*[]))
assert_eq(vec(), vec(0, 0, 0))

l = []
l ++= [1, 2]
l ++= [3, 4]
assert_eq(l, [1, 2, 3, 4])

assert_eq(1, 1 ?? 2)
assert_eq(1, 1 ?? null)
assert_eq(2, null ?? 2)
assert_eq(null, null ?? null)

assert_eq(vec( ), vec(
))

assert_eq("\n", "
")
