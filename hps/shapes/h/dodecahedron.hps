use * from euclid

export id = "dodecahedron"
export name = "Dodecahedron"
export adjective = "Dodecahedral"
export aliases = []
export facet_colors = id
export ndim = 3
export shape_tag = "3d/platonic/dodecahedron"

export fn new() -> Map { new(ident()) }
export fn new(t: Transform) -> Map {
    export fn transform_by(t2: Transform) -> Map { new(t2 * t) }

    export id, name, adjective, aliases, facet_colors, ndim, shape_tag
    export sym = t.transform(cd("h3"))

    export facet_pole = sym.oox.unit
    export facet_names = sym.names(point(facet_pole), #{
        F = [],
        U = [2, "F"],
        R = [1, "U"],
        L = [0, "R"],
        DR = [1, "L"],
        DL = [0, "DR"],
        BR = [2, "DR"],
        BL = [2, "DL"],
        PR = [1, "BL"],
        PL = [0, "PR"],
        PD = [1, "PL"],
        PB = [2, "PD"],
    })
}

export facet_colors_list = [
    #{name = "U",  display = "Up",         default = "White"},
    #{name = "F",  display = "Front",      default = "Green Dyad [2]"},
    #{name = "R",  display = "Right",      default = "Red"},
    #{name = "L",  display = "Left",       default = "Purple"},
    #{name = "BR", display = "Back-right", default = "Blue Dyad [2]"},
    #{name = "BL", display = "Back-left",  default = "Yellow Dyad [2]"},
    #{name = "DR", display = "Down-right", default = "Yellow Dyad [1]"},
    #{name = "DL", display = "Down-left",  default = "Blue Dyad [1]"},
    #{name = "PR", display = "Para-right", default = "Pink"},
    #{name = "PL", display = "Para-left",  default = "Orange"},
    #{name = "PB", display = "Para-back",  default = "Green Dyad [1]"},
    #{name = "PD", display = "Para-down",  default = "Gray"},
]
add_color_system(
    id = facet_colors,
    name = name,
    colors = facet_colors_list,
)

add_puzzle(
    id = id,
    version = "1.0.0",
    name = name,
    aliases = aliases,
    colors = facet_colors,
    engine = "euclid",
    ndim = ndim,
    build = fn() {
        use sym, facet_pole, facet_names from new()
        with #sym = sym { carve(plane(facet_pole), facet_names) }
    },
    tags = #{
        schema = 1,
        type = "shape",
        stable = "2.0.0",
        shape = shape_tag,
    },
)
