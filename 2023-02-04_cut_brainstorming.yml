
constants:
  s1: sphere(a,b,c,d)
  S(d, r): sphere(intersect(d, s1), r)



  f: g(x)
  g: f(x)


  a: f(3)





sphere(center, radius)
sphere_from_points(p1, p2, ...) # can be circle

plane(pole)
plane(normal, distance)
plane_from_points(p1, p2, ...) # can be line, etc.
line_from_points(p1, p2)


shape:
  construction:
    - remove: false
      cuts:
        - sphere_from_points().center
        - sphere()
        - s1
        - p1
        - plane_from_points()
        - plane()
        - sphere([a, b, c, d])
        - center: c
          radius: [r1, r2, ...]
        - normal: v
          distance: [d1, d2, ...]
        - pole: p
      ...


axes:
  - core: [0, 0, 0]
    cuts:
      - sphere_from_points().center
      - sphere()
      - s1
      - p1
      - plane_from_points()
      - plane()
      - sphere([a, b, c, d])
      - center: c
        radius: [r1, r2, ...]
      - normal: v
        distance: [d1, d2, ...]
      - pole: p
    names:
    prefix:

  - cuts:
      - normal: +X
        distance: 2/3
      - normal: +Y
        distance: 2/3









      - sphere: [a, b, c, d]
      - sphere: { center: c, radius: r }
      - sphere: { centers: [ ... ], radius: r }
      - sphere: { center: c, radii: [ ... ] }
      - plane: [a, b, c]
      - plane: { normal: v, distance: d }
      - plane: { normal: v, point: p }
      - plane: { pole: v }
